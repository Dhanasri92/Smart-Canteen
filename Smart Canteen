#include<iostream>
#include<string>
#include<queue>
using namespace std;
class Order {
    public:
    int token_no;
    string order_type;
    string payment_process;
    int making_time;
    Order(int no,string type,string process,int time){
        token_no=no;
        order_type=type;
        payment_process=process;
        making_time=time;

    }
};
class Queue_Manager 
{
    private:
    queue<Order> bevageQueue;
    queue<Order> lunchQueue;

    public:
    void addOrder(const Order &order){
        if(order.order_type =="bevage"){
            cout<<"added token no"<<order.token_no<<"to the bevage session";
        }
            else if(order.order_type=="lunch"){
                cout<<"added token no"<<order.token_no<<"to the lunch session";

            
        }
        else{
            cout<<"invalid input"<<" ";

        }
    }

}
void processOrder(const string &counter_type){
    if (counter_type=="bevage"){
        if (bevageQueue.empty()){
            cout<<"No current orders"<<" ";

        }else {
           Order current  =bevageQueue.front();
           bevageQueue.pop();
           cout<<"preparing bevage token no"<<current.token_no<<"Payment:"<<current.payment_process<<" ";


        }
    }else if(counter_type=="lunch"){
        if(lunchQueue.empty()){
            cout<<"No  current orders on lunch counter"<<" ";
            
        }else {
            Order current = lunchQueue.front();
            lunchQueue.pop();
            cout<<"payment:"<<current.payment_process<<" ";


        }

    } else
    { cout<<" invalid input"<<" ";


    }
    
}
void estimateWaitTime(const string& counterType) {
    int totalTime = 0;
    if (counterType == "Beverage") {
    queue<Order> tempQueue = beverageQueue;
    while (!tempQueue.empty()) {
    totalTime += tempQueue.front().prepTime;
    tempQueue.pop();
    }
    cout << "Estimated wait time for Beverage Counter: " << totalTime << "
   minutes.\n";
    } else if (counterType == "Lunch") {
    queue<Order> tempQueue = lunchQueue;
    while (!tempQueue.empty()) {
    totalTime += tempQueue.front().prepTime;
    tempQueue.pop();
    }
    cout << "Estimated wait time for Lunch Counter: " << totalTime << "
   minutes.\n";
    } else {
    cout << "Invalid counter type.\n";
    }
    };
   
   
